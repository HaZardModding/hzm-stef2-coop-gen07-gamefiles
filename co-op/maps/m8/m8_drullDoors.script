float scriptControlledAI = 0;

void idryll_aioff () {
/*	entity ent, activator ;
	ent = getcurrententity ();
	if ( ent )
	{
		activator = ent.getLastActivatingEntity();
		if ( (scriptControlledAI == 1 ) || (activator.getrawtargetname () == "krindo" ))
		{
			ent.nottriggerable();
			$krindo.ai_off();
			$krindo.setstringvar ( "status" , "ready" );
			centerprint ( "AI off" );

			wait ( .1 );

			$krindo.turntoangle ( ent.getfloatvar ( "uservar1" ) );
			$krindo.setanim ( ent.getstringvar ( "uservar2" ) );
			scriptControlledAI = 0;
		}
		else
			print ( "idryll_aioff(): not activated by krindo; do you need to set scriptControlledAI to 1?\n" );
	}*/
}

void idryll_aion () {
/*	entity ent, activator;
	ent = getcurrententity ();
	if ( ent )
	{
		activator = ent.getLastActivatingEntity();

		if ( (scriptControlledAI == 1 ) || (activator.getrawtargetname () == "krindo" ))
		{
			ent.nottriggerable();
			$krindo.turntoangle ( ent.getfloatvar ( "uservar1" ) );
			$krindo.ai_on();
			$krindo.setstringvar ( "status" , "leading" );

			centerprint ( "AI on" );
			scriptControlledAI = 0;
		}
		else
			print ( "idryll_aion(): not activated by krindo; do you need to set scriptControlledAI to 1?\n" );
	}	
*/
}

void drull_smalldoor ( ) {
	entity l_part1,l_part2,l_part3,
		   r_part1,r_part2,r_part3,
		   block,trig,activator,areaportal;

	float restoreAIOnComplete = 0;
	trig = getcurrententity ();
	activator = trig.getLastActivatingEntity ();

	string basename,direction;
	basename  = trig.getstringvar ( "uservar1" );
	direction = trig.getstringvar ( "uservar2" );

	l_part1 = getentity ( basename + "left1" );
	l_part2 = getentity ( basename + "left2" );
	l_part3 = getentity ( basename + "left3" );

	r_part1 = getentity ( basename + "right1" );
	r_part2 = getentity ( basename + "right2" );
	r_part3 = getentity ( basename + "right3" );

	block = getentity ( basename + "block" );
	areaportal = getentity ( basename + "portal" );

	areaportal.openportal ();

	if (trig)
	{
		entity activator;
		trig.nottriggerable ();

/*		print ( activator.getrawtargetname() + "\n" );

		if( activator.getrawtargetname() == "krindo" )
		{
			restoreAIOnComplete = 1.0;
			print ( "hi\n" );
			idryll_aioff();
			$krindo.walkto ( basename + "node" , "run" );
		}*/
	}
	else {
		//print ( "drull_smalldoor::getcurrententity () == null\n" ); //hzm coop mod chrissstrahl - don't spam server console
		return;
	}

//-----------------
//Part 1
//-----------------
	l_part1.time ( 2 );
	r_part1.time ( 2 );

	if ( direction == "ns" ) {
		l_part1.moveSouth ( 64 );
		r_part1.moveNorth ( 64 );
		r_part1.playsound ( "sound/doors/kling_shipdoor.wav", 9, .7, 500 );
	}
	else {
		r_part1.moveWest ( 64 );
		l_part1.moveEast ( 64 );
		r_part1.playsound ( "sound/doors/kling_shipdoor.wav", 9, .7, 500 );
	}

	wait ( 0.5 );

//-----------------
//Part 2
//-----------------
	l_part2.time ( 2 );
	r_part2.time ( 2 );

	if ( direction == "ns" ) {
		l_part2.moveSouth ( 60 );
		r_part2.moveNorth ( 60 );
		r_part2.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}
	else {
		r_part2.moveWest ( 60 );
		l_part2.moveEast ( 60 );
		r_part2.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}
	l_part2.moveUp ( 60 );
	r_part2.moveUp ( 60 );


	wait ( 0.75 );
		r_part2.playsound ( "sound/doors/drull_smldoor_stop_01.wav", 8, .7, 500 );

	if ( restoreAIOnComplete == 1.0 )
		idryll_aion();
//-----------------
//Part 3
//-----------------
	l_part3.time ( 2 );
	r_part3.time ( 2 );

	if ( direction == "ns" ) {
		l_part3.moveSouth ( 48 );
		r_part3.moveNorth ( 48 );
		r_part3.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}
	else {
		r_part3.moveWest ( 48 );
		l_part3.moveEast ( 48 );
		r_part3.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}
	l_part3.moveUp ( 48 );
	r_part3.moveUp ( 48 );

	//block.notsolid ();
	waitfor ( r_part3 );
        r_part2.playsound ( "sound/doors/drull_smldoor_stop_01.wav", 8, .7, 500 );
//	wait ( 3 );
	//wait ( 9 );


//Blah, just leave the things open


}

void drull_smalldoor_close() 
{
	return;//hzm coop mod chrissstrahl - don't do this in coop
	centerprint("drull_smalldoor_close");//hzm coop mod chrissstrahl - let us know where we are at
	entity l_part1,l_part2,l_part3,
		   r_part1,r_part2,r_part3,
		   block,trig,activator,areaportal;

	float restoreAIOnComplete = 0;
	trig = getcurrententity ();
	activator = trig.getLastActivatingEntity ();

	string basename,direction;
	basename  = trig.getstringvar ( "uservar1" );
	direction = trig.getstringvar ( "uservar2" );

	l_part1 = getentity ( basename + "left1" );
	l_part2 = getentity ( basename + "left2" );
	l_part3 = getentity ( basename + "left3" );

	r_part1 = getentity ( basename + "right1" );
	r_part2 = getentity ( basename + "right2" );
	r_part3 = getentity ( basename + "right3" );

	block = getentity ( basename + "block" );
	areaportal = getentity ( basename + "portal" );

	areaportal.openportal ();
	
//-----------------
//Part 3
//-----------------
	l_part3.time ( 4 );
	r_part3.time ( 4 );

	if ( direction == "ns" ) {
		r_part3.moveSouth ( 48 );
		l_part3.moveNorth ( 48 );
		r_part3.playsound ( "sound/doors/drull_bigdoor_01.wav", 8, .7, 500 );
	}
	else {
		l_part3.moveWest ( 48 );
		r_part3.moveEast ( 48 );
		r_part3.playsound ( "sound/doors/drull_bigdoor_01.wav", 8, .7, 500 );
	}
	l_part3.moveDown ( 48 );
	r_part3.moveDown ( 48 );

	wait ( 1.5 );

//-----------------
//Part 2
//-----------------
	l_part2.time ( 4 );
	r_part2.time ( 4 );

	if ( direction == "ns" ) {
		r_part2.moveSouth ( 60 );
		l_part2.moveNorth ( 60 );
		r_part2.playsound ( "sound/doors/drull_bigdoor_01.wav", 8, .7, 500 );
	}
	else {
		l_part2.moveWest ( 60 );
		r_part2.moveEast ( 60 );
		r_part2.playsound ( "sound/doors/drull_bigdoor_01.wav", 8, .7, 500 );
	}
	l_part2.moveDown ( 60 );
	r_part2.moveDown ( 60 );

	block.solid ();
	wait ( 1.0 );
        r_part2.playsound ( "sound/doors/drull_bigdoor_stop_01.wav", 8, .7, 500 );

//-----------------
//Part 1
//-----------------
	l_part1.time ( 4 );
	r_part1.time ( 4 );

	if ( direction == "ns" ) {
		r_part1.moveSouth ( 64 );
		l_part1.moveNorth ( 64 );
	}
	else {
		l_part1.moveWest ( 64 );
		r_part1.moveEast ( 64 );
	}

	wait ( 4 );

	trig.triggerable ();
	areaportal.closeportal();
}


void drull_bigdoor ( ) {
	centerprint("drull_bigdoor");//hzm coop mod chrissstrahl - let us know where we are at

	entity l_part1,l_part2,l_part3,l_part4,
		   r_part1,r_part2,r_part3,r_part4,
		   trig,activator;

	trig = getcurrententity ();
	activator = trig.getLastActivatingEntity ();

	string basename,direction;
	basename  = trig.getstringvar ( "uservar1" );
	direction = trig.getstringvar ( "uservar2" );

	l_part1 = getentity ( basename + "left1" );
	l_part2 = getentity ( basename + "left2" );
	l_part3 = getentity ( basename + "left3" );
	l_part4 = getentity ( basename + "left4" );

	r_part1 = getentity ( basename + "right1" );
	r_part2 = getentity ( basename + "right2" );
	r_part3 = getentity ( basename + "right3" );
	r_part4 = getentity ( basename + "right4" );


	trig.openportal ();
	float restoreAIOnComplete = 0.0;

	if (trig)
	{
		entity activator;
		trig.nottriggerable ();
/*
		if( activator.getrawtargetname() == "krindo" )
		{
			restoreAIOnComplete = 1.0;
			idryll_aioff();
			$krindo.walkto ( basename + "node" , "run");
		}*/
	}
	else {
		//print ( "drull_bigdoor::getcurrententity () == null\n" ); //hzm coop mod chrissstrahl - don't spam server console
		return;
	}


//-----------------
//Part 1
//-----------------
	l_part1.time ( 2 );
	r_part1.time ( 2 );

	if ( direction == "ns" ) {
		l_part1.moveSouth ( 64 );
		r_part1.moveNorth ( 64 );
		r_part1.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}
	else {
		r_part1.moveWest ( 64 );
		l_part1.moveEast ( 64 );
		r_part1.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}

	wait ( 0.5 );
		r_part1.playsound ( "sound/doors/drull_smldoor_stop_01.wav", 8, .7, 500 );

//-----------------
//Part 2
//-----------------
	l_part2.time ( 2 );
	r_part2.time ( 2 );

	if ( direction == "ns" ) {
		l_part2.moveSouth ( 60 );
		r_part2.moveNorth ( 60 );
		r_part2.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}
	else {
		r_part2.moveWest ( 60 );
		l_part2.moveEast ( 60 );
		r_part2.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}
	l_part2.moveUp ( 60 );
	r_part2.moveUp ( 60 );

	wait ( 0.75 );

		r_part2.playsound ( "sound/doors/drull_smldoor_stop_01.wav", 8, .7, 500 );

	if ( restoreAIOnComplete == 1.0 )
		idryll_aion();

//-----------------
//Part 3
//-----------------
	l_part3.time ( 2 );
	r_part3.time ( 2 );

	if ( direction == "ns" ) {
		l_part3.moveSouth ( 48 );
		r_part3.moveNorth ( 48 );
		r_part3.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}
	else {
		r_part3.moveWest ( 48 );
		l_part3.moveEast ( 48 );
		r_part3.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}
	l_part3.moveUp ( 48 );
	r_part3.moveUp ( 48 );

	wait ( 1.0 );


//-----------------
//Part 4
//-----------------
	l_part4.time ( 2 );
	r_part4.time ( 2 );

	if ( direction == "ns" ) {
		l_part4.moveSouth ( 24 );
		r_part4.moveNorth ( 24 );
		r_part4.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}
	else {
		r_part4.moveWest ( 24 );
		l_part4.moveEast ( 24 );
		r_part4.playsound ( "sound/doors/drull_smldoor_01.wav", 8, .7, 500 );
	}
	l_part4.moveUp ( 24 );
	r_part4.moveUp ( 24 );


//-----------------
//Close
//-----------------

//Blah, just leave the things open

//return;
	wait( 2 );

//-----------------
//Part 4
//-----------------
	l_part4.time ( 4 );
	r_part4.time ( 4 );

	if ( direction == "ns" ) {
		r_part4.moveSouth ( 24 );
		l_part4.moveNorth ( 24 );
		r_part4.playsound ( "sound/doors/drull_bigdoor_01.wav", 8, .7, 500 );
	}
	else {
		l_part4.moveWest ( 24 );
		r_part4.moveEast ( 24 );
		r_part4.playsound ( "sound/doors/drull_bigdoor_01.wav", 8, .7, 500 );
	}
	l_part4.moveDown ( 24 );
	r_part4.moveDown ( 24 );

	//print ( "waiting to close " + basename + "\n" ); //hzm coop mod chrissstrahl - don't spam server console
	wait ( 2.0 );

        	r_part4.playsound ( "sound/doors/drull_bigdoor_stop_01.wav", 8, .7, 500 );

//-----------------
//Part 3
//-----------------
	l_part3.time ( 4 );
	r_part3.time ( 4 );

	if ( direction == "ns" ) {
		r_part3.moveSouth ( 48 );
		l_part3.moveNorth ( 48 );
		r_part3.playsound ( "sound/doors/drull_bigdoor_01.wav", 7, .7, 500 );
	}
	else {
		l_part3.moveWest ( 48 );
		r_part3.moveEast ( 48 );
		r_part3.playsound ( "sound/doors/drull_bigdoor_01.wav", 7, .7, 500 );
	}
	l_part3.moveDown ( 48 );
	r_part3.moveDown ( 48 );

	wait ( 1.5 );
        	r_part3.playsound ( "sound/doors/drull_bigdoor_stop_01.wav", 7, .7, 500 );

//-----------------
//Part 2
//-----------------
	l_part2.time ( 4 );
	r_part2.time ( 4 );

	if ( direction == "ns" ) {
		r_part2.moveSouth ( 60 );
		l_part2.moveNorth ( 60 );
		r_part2.playsound ( "sound/doors/drull_bigdoor_01.wav", 8, .7, 500 );
	}
	else {
		l_part2.moveWest ( 60 );
		r_part2.moveEast ( 60 );
		r_part2.playsound ( "sound/doors/drull_bigdoor_01.wav", 8, .7, 500 );
	}
	l_part2.moveDown ( 60 );
	r_part2.moveDown ( 60 );

	wait ( 1.0 );
        	r_part2.playsound ( "sound/doors/drull_bigdoor_stop_01.wav", 8, .7, 500 );

//-----------------
//Part 1
//-----------------
	l_part1.time ( 4 );
	r_part1.time ( 4 );

	if ( direction == "ns" ) {
		r_part1.moveSouth ( 64 );
		l_part1.moveNorth ( 64 );
		l_part2.moveNorth ( 60 );
		r_part1.playsound ( "sound/doors/drull_bigdoor_01.wav", 8, .7, 500 );
	}
	else {
		l_part1.moveWest ( 64 );
		r_part1.moveEast ( 64 );
		l_part2.moveNorth ( 60 );
		r_part1.playsound ( "sound/doors/drull_bigdoor_01.wav", 8, .7, 500 );
	}

	wait ( 4 );

	trig.triggerable ();
	trig.closeportal ();
}

void drull_lift ( ) {
	string status;
	status = $krindo.getstringvar ( "status" );

	entity caller, lift;
	float dist,oldState;
	string dir;
	vector vecMove = '0 0 0';

	caller = getcurrententity ();
	caller.nottriggerable ();

	lift = getEntity( caller.getstringvar ( "uservar1" ) );

	dist = caller.getfloatvar ( "uservar2" );
	
	vecMove = vectorSetZ( vecMove, dist );

	if ( dist < 0 ) {
		dir = "down";
		dist *= -1;
	}
	else
		dir = "up";

	if ( status == "ready" )
	{
		//---TEMP solution for keeping player on lift
		if ( hack == 1 )
		{
			centerprint("FIX ME?!!");//hzm coop mod chrissstrahl - info to see if it really needs fixing
			$liftClip.solid();
			$endLiftClip.solid();			
		}
		//print ( caller.getstringvar ( "uservar1" ) + "\n" ); //hzm coop mod chrissstrahl - don't spam server console
		//print ( caller.getstringvar ( "uservar3" ) + "\n" ); //hzm coop mod chrissstrahl - don't spam server console
		//print ( dist + "\n" ); //hzm coop mod chrissstrahl - don't spam server console
		//globalAccelMove_AxisAligned ( caller.getstringvar ( "uservar1" ) , caller.getfloatvar ( "uservar3" ) , dist , dir );
		globalAccelMove( lift, vecMove, caller.getfloatvar ( "uservar3" ), "rampupdown", "" );
	}
	caller.triggerable ();
}


