//badezimmer related functions - purpose is to keep the scripts simple
//$fedOutpostDoorBadezimmer


//[b607] shower and bathtub added
void badezimmerDusche()
{//toggle shower door
	if($showerDoorLeft_origin.getFloatVar("isOpen")){
		$showerDoorLeft.notsolid();
		$showerDoorRight.notsolid();
		
		$showerDoorLeft_origin.time(1);
		$showerDoorLeft_origin.rotateYup(90);
		
		$showerDoorRight_origin.time(1);
		$showerDoorRight_origin.rotateYDown(90);
		
		$showerDoorLeft_origin.setFloatVar("isOpen",0);
		wait(1);
		globalCoop_player_makeSolidASAP($showerDoorLeft);
		globalCoop_player_makeSolidASAP($showerDoorRight);
	}else{
		$showerDoorLeft.notsolid();
		$showerDoorRight.notsolid();
		
		$showerDoorLeft_origin.time(1);
		$showerDoorLeft_origin.rotateYdown(90);
		
		$showerDoorRight_origin.time(1);
		$showerDoorRight_origin.rotateYup(90);
		
		$showerDoorLeft_origin.setFloatVar("isOpen",1);
	}
}

//[b607] Dusche und Bad
void badezimmerDuscheBrause()
{//toggle shower
	if($badezimmerWasserStrahlBrauseBad.getFloatVar("isOn")){
		$badezimmerWasserStrahlBrauseBad.forceAlpha(1);
		$badezimmerWasserStrahlBrauseBad.fade(.2,0);	
		$badezimmerWasserTropfenBrauseBad.forceAlpha(1);
		$badezimmerWasserTropfenBrauseBad.fade(.2,0);
		$badezimmerWasserStrahlBrauseBad.setFloatVar("isOn",0);
		$badezimmerWasserStrahlBrauseBad.stoploopsound();
	}
	else{
		if(float_basementWasserAbgestellt != 1){
			$badezimmerWasserStrahlBrauseBad.forceAlpha(0);
			$badezimmerWasserStrahlBrauseBad.fadeIn(.2,1);
			$badezimmerWasserStrahlBrauseBad.loopsound("sound/environment/water/steam1.wav",1,48);
		}else{
			$badezimmerWasserTropfenBrauseBad.forceAlpha(0);
			$badezimmerWasserTropfenBrauseBad.fadeIn(.2,1);
			$badezimmerWasserStrahlBrauseBad.loopsound("sound/environment/water/drip.wav",1,32);			
		}
		$badezimmerWasserStrahlBrauseBad.setFloatVar("isOn",1);
	}
}

//[b607] Dusche und Bad
void badezimmerBadeWanne_nooverflow()
{
	while(vectorGetZ($badezimmerWasserWanne_origin_check.getOrigin()) < -61){
		wait(0.1);
	}
	$badezimmerWasserStrahl1.forceAlpha(1);
	$badezimmerWasserStrahl1.fade(.2,0);
	$badezimmerWasserStrahl2.forceAlpha(1);
	$badezimmerWasserStrahl2.fade(.2,0);
	$badezimmerWasserStrahl2.stopLoopSound();
	$badezimmerWasserWanne_origin.time(0.1);
	$badezimmerWasserWanne_origin.movetopos('2276 -1702 -61');	
}

//[b607] Dusche und Bad
void badezimmerBadeWanne()
{
	if($badezimmerWasserStrahl1.getFloatVar("isOn")){
		$badezimmerWasserStrahl1.forceAlpha(1);
		$badezimmerWasserStrahl1.fade(.2,0);
		$badezimmerWasserStrahl2.forceAlpha(1);
		$badezimmerWasserStrahl2.fade(.2,0);
		
		$badezimmerWasserTropfen1.forceAlpha(1);
		$badezimmerWasserTropfen1.fade(.2,0);
		$badezimmerWasserTropfen2.forceAlpha(1);
		$badezimmerWasserTropfen2.fade(.2,0);
		$badezimmerWasserStrahl2.stopLoopSound();
		
		$badezimmerWasserWanne_origin.time(1);
		$badezimmerWasserWanne_origin.movedown(1); //stop moveing

		$badezimmerWasserStrahl1.setFloatVar("isOn",0);
	}else{
		if(float_basementWasserAbgestellt != 1){
			float fZaxis,fTime = 1;
			vector v1,v2;
			v1=$badezimmerWasserWanne_origin_check.getOrigin();
			v1_x = 0;
			v1_y = 0;
			v2='0 0 -61';
			fZaxis = vectorLength(v1 - v2);
			fTime = (fTime * fZaxis);
		
			$badezimmerWasserWanne_origin.time(fTime); 
			$badezimmerWasserWanne_origin.movetopos('2276 -1702 -61');
		
			$badezimmerWasserStrahl1.forceAlpha(0);
			$badezimmerWasserStrahl1.fadein(.2,1);
			$badezimmerWasserStrahl2.forceAlpha(0);
			$badezimmerWasserStrahl2.fadein(.2,1);
			$badezimmerWasserStrahl2.loopsound("sound/environment/water/fount1.wav",1,64);
			
			//stop overflow
			thread badezimmerBadeWanne_nooverflow();
		}
		else{			
			$badezimmerWasserTropfen1.forceAlpha(0);
			$badezimmerWasserTropfen1.fadein(.2,1);
			$badezimmerWasserTropfen2.forceAlpha(0);
			$badezimmerWasserTropfen2.fadein(.2,1);
			$badezimmerWasserStrahl2.loopsound("sound/environment/water/drip.wav",1,32);
		}
		$badezimmerWasserStrahl1.setFloatVar("isOn",1);
	}
}

void badezimmerWaschbecken()
{//toggle wasser
	if(!float_badezimmerWaschbecken){
		float_badezimmerWaschbecken=1;
		if(float_basementWasserAbgestellt != 1){
			$badezimmerWasserStrahl.forceAlpha(0);
			$badezimmerWasserStrahl.fadein(.2,1);
			$badezimmerWaschbeckenWaterOrigin.loopsound("sound/environment/water/fount1.wav",1,64);
			thread badezimmerWaschbeckenWasserUp();
		}else{
			$badezimmerWasserTropfen.forceAlpha(0);
			$badezimmerWasserTropfen.fadein(.2,1);
			$badezimmerWaschbeckenWaterOrigin.loopsound("sound/environment/water/drip.wav",1,32);
		}
	}else{
		float_badezimmerWaschbecken=0;
		//[b607] chrissstrahl - fix possible bug hiding the wrong model
		$badezimmerWasserStrahl.forceAlpha(1);
		$badezimmerWasserStrahl.fade(.2,0);		
		$badezimmerWasserTropfen.forceAlpha(1);
		$badezimmerWasserTropfen.fade(.2,0);
		
		$badezimmerWaschbeckenWaterOrigin.stopLoopSound();
		thread badezimmerWaschbeckenWasserDown();
	}
}

void badezimmerWaschbeckenWasserUp()
{
	if(float_basementWasserAbgestellt != 1){
		killthread("badezimmerWaschbeckenWasserDown");
		float fZaxis,fTime = 3;
		vector v1,v2;
		v1=$badezimmerWaschbeckenWaterOrigin.getOrigin();
		v1_x = 0;
		v1_y = 0;
		v2='0 0 -29';
		fZaxis = vectorLength(v1 - v2);
		fTime = (fTime * fZaxis);
		$badezimmerWaschbeckenWaterOrigin.movetopos('2602 -1558 -29');
		$badezimmerWaschbeckenWaterOrigin.time(fTime);
		waitfor($badezimmerWaschbeckenWaterOrigin);
	//turn off water
		if(float_badezimmerWaschbecken){
			thread badezimmerWaschbecken();
		}
	}
}

void badezimmerWaschbeckenWasserDown()
{
	if(float_badezimmerWaschbecken != 1 || float_basementWasserAbgestellt == 1){
		killthread("badezimmerWaschbeckenWasserUp");
		float fZaxis,fTime = 3;
		vector v1,v2;
		v1=$badezimmerWaschbeckenWaterOrigin.getOrigin();
		v1_x = 0;
		v1_y = 0;
		v2='0 0 -34';
		fZaxis = vectorLength(v1 - v2);
		fTime = (fTime * fZaxis);
		$badezimmerWaschbeckenWaterOrigin.movetopos('2602 -1558 -34');
		$badezimmerWaschbeckenWaterOrigin.time(fTime);
	}
}

void badezimmerDynlight()
//activated when a player enters a room which has a trigger_multiple inside
{
return;
	entity e;
	e=getCurrentEntity();
	if(doesEntityExist(e)){
		e.nottriggerable();
//check now if the lights are on allready
		if($world.getlightintensity("fedOutpostBadezimmer") !=  0){
			return;
		}
//turn on lights
		$world.light_fade("fedOutpostBadezimmer",1,1);
//close and lock door
		$fedOutpostDoorBadezimmer.lock();
//open toilet
		$badezimmerExit.nottriggerable();
		badezimmerTolietOpen();
		$badezimmerExit.triggerable();
//CHEK IF PLAYER IS INSIDE THE TRIGGER-FIELD/ROOM
		while(globalCoop_check_isEntityInsideOfEntity(globalCoop_return_playerClosestActive(e),e,0))
		{
			wait(1);
		}
//unlock door, close toilet and flush it
		$fedOutpostDoorBadezimmer.unlock();
		badezimmerTolietClose();
//turn off lights
		$world.light_fade("fedOutpostBadezimmer",0,.5);
		if(doesEntityExist(e)){
			e.triggerable();
		}
	}
}

void badezimmerToilet()
{
	entity e;
	e=getCurrentEntity();
	if(doesEntityExist(e)){
		e.nottriggerable();
		entity ePlayer;
		ePlayer = e.getLastActivatingEntity();
		if(doesEntityExist(ePlayer)){
			badezimmerTolietOpen();
			float fInside=1;
			while(fInside)
			{
				if(!globalCoop_check_isEntityInsideOfEntity(ePlayer,e,20)){
					fInside=0;
				}
				wait(2);
			}
			badezimmerTolietClose();
		}
		wait(1);
		if(doesEntityExist(e)){
			e.triggerable();
		}
	}
}

void badezimmerTolietOpen()
{
	if(!float_badezimmerTolietState){
		$badezimmerToliletCapOrigin.angles('0 0 0');
		float_badezimmerTolietState=1;
		$badezimmerToliletCapOrigin.rotateZ(-180);
		wait(.5);
		$badezimmerToliletCapOrigin.rotateZ(0);
		wait(1);
		$badezimmerToliletCapOrigin.angles('0 0 270');
	}
}

void badezimmerTolietClose()
{
	if(float_badezimmerTolietState){
		$badezimmerToliletCapOrigin.angles('0 0 270');
		float_badezimmerTolietState=0;
		$badezimmerToliletCapOrigin.rotateZ(180);
		wait(.5);
		$badezimmerToliletCapOrigin.rotateZ(0);
		$badezimmerToliletCapOrigin.playsound("sound/ships/enterprise/ent_replicator.wav",2,2,128);
		$badezimmerToliletCapOrigin.angles('0 0 0');
	}
}



