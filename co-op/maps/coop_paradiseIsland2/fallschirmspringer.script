//SPRINGER//////////////////////////////////////////////////////////////////////
//SPRINGER//////////////////////////////////////////////////////////////////////
//SPRINGER//////////////////////////////////////////////////////////////////////

float returnFallschirmspringerId(entity e)
{
//IDENDIFY THE -UFO-
	if(doesEntityExist(e)){
		float fRounds;
		string sRawTargetname;
		sRawTargetname=e.getRawTargetname();
		while
		(
			sRawTargetname != "fallschirm"+fRounds &&
			sRawTargetname != "fallschirmschirm"+fRounds &&
			sRawTargetname != "fallschirmspringer"+fRounds &&
			sRawTargetname != "fallschirmcagebottom"+fRounds &&
			sRawTargetname != "fallschirmcagexminus"+fRounds &&
			sRawTargetname != "fallschirmcagexplus"+fRounds &&
			sRawTargetname != "fallschirmcageyminus"+fRounds &&
			sRawTargetname != "fallschirmcageyplus"+fRounds &&
			fRounds < 20
		)
		{
			fRounds++;
			wait(.01);
		}
	}
	if(fRounds < 20){
		return fRounds;
	}
//RETURN NULL ON DEFAULT
	return -1;
}

void relaseFallschirmspringer(float fNumber)
{
	entity	eFallschirm,
			eFallschirmSchirm,
			eFallschirmCagexminus,
			eFallschirmCagexplus,
			eFallschirmCageyminus,
			eFallschirmCageyplus,
			eFallschirmCageBottom,
			eFallschirmSpringer;
	eFallschirm=getEntity("fallschirm"+fNumber);
	eFallschirmSchirm=getEntity("fallschirmschirm"+fNumber);
	eFallschirmCagexminus=getEntity("fallschirmcagexminus"+fNumber);
	eFallschirmCagexplus=getEntity("fallschirmcagexplus"+fNumber);
	eFallschirmCageyminus=getEntity("fallschirmcageyminus"+fNumber);
	eFallschirmCageyplus=getEntity("fallschirmcageyplus"+fNumber);
	eFallschirmCageBottom=getEntity("fallschirmcagebottom"+fNumber);
	eFallschirmSpringer=getEntity("fallschirmspringer"+fNumber);
	
	eFallschirmSpringer.mass(400);
	
	eFallschirm.moveToPos(eFallschirm.getOrigin());
	eFallschirm.time(0.01);
	
	eFallschirmCagexminus.notsolid();
	eFallschirmCagexplus.notsolid();
	eFallschirmCageyminus.notsolid();
	eFallschirmCageyplus.notsolid();
	eFallschirmCageBottom.notsolid();
	eFallschirm.setVelocity('0 0 450');
	wait(20);
	eFallschirm.setVelocity('0 0 0');
}

void blockedFallschirmspringer()
////////////////////////////////////////////////////////////////////////////////
//Called when something blocks the Cage
// - The AI ai blocks the cage (happens ALSO if it does not fall straight down in a 90° angle)
// - Another AI is blocking the Chage, before it reaches target destination
////////////////////////////////////////////////////////////////////////////////
{
	entity e;
	e=getCurrentEntity();
	if(doesEntityExist(e)){
		e.noBlock();
		thread relaseFallschirmspringer(returnFallschirmspringerId(e));
	}
}

void cageInFallschirmspringerStop()
{
	entity e;
	e=getCurrentEntity();
	if(doesEntityExist(e)){
		e.noBlock();
		e.setVelocity('0 0 0');
	}
}

void cageInFallschirmspringer(entity e,vector vVelocity)
{
	if(doesEntityExist(e)){
		thread setOnBlockThread(e,"cageInFallschirmspringerStop");
		e.setVelocity(vVelocity);
	}
}

void startFallschirmspringer(float fNumber,vector vStart,vector vLand,string sModel)
////////////////////////////////////////////////////////////////////////////////
//the Fallschirme must be avialabe in the map, they are mapped, they are not spawned!!!
////////////////////////////////////////////////////////////////////////////////
{
	if(sModel == ""){
		print("ERROR: CANT SPAWN MODEL, IF YOU GIVE ME A EMPTY STRING DUDE!\n");
		print("MAKE IT SO: startFallschirmspringer(1,'0 0 0','0 0 0',\"char/file.tik\")!\n");
		return;
	}
	//fallschirmcagexminus0
	//fallschirmcagexplus0
	//fallschirmcageyminus0
	//fallschirmcagexplus0
	entity	eFallschirm,
			eFallschirmSchirm,
			eFallschirmCagexminus,
			eFallschirmCagexplus,
			eFallschirmCageyminus,
			eFallschirmCageyplus,
			eFallschirmCageBottom;
	eFallschirm=getEntity("fallschirm"+fNumber);
	eFallschirmSchirm=getEntity("fallschirmschirm"+fNumber);
	eFallschirmCagexminus=getEntity("fallschirmcagexminus"+fNumber);
	eFallschirmCagexplus=getEntity("fallschirmcagexplus"+fNumber);
	eFallschirmCageyminus=getEntity("fallschirmcageyminus"+fNumber);
	eFallschirmCageyplus=getEntity("fallschirmcageyplus"+fNumber);
	eFallschirmCageBottom=getEntity("fallschirmcagebottom"+fNumber);
	if(!doesEntityExist(eFallschirm)){
		print("ERROR: $fallschirm"+fNumber+" (script_origin) NOT FOUND!\n");
		return;
	}
	if(!doesEntityExist(eFallschirmCageBottom)){
		print("ERROR: FALLSCHIRM"+fNumber+" (monster clip bottom) NOT FOUND!\n");
		return;
	}
	if(!doesEntityExist(eFallschirmSchirm)){
		print("ERROR: FALLSCHIRM"+fNumber+" (Cones-Patches) NOT FOUND!\n");
		return;
	}
	if(!doesEntityExist(eFallschirmCagexminus)){
		print("ERROR: FALLSCHIRM"+fNumber+" (monster clip x-minus) NOT FOUND!\n");
		return;
	}
	if(!doesEntityExist(eFallschirmCagexplus)){
		print("ERROR: FALLSCHIRM"+fNumber+" (monster clip x-plus) NOT FOUND!\n");
		return;
	}
	if(!doesEntityExist(eFallschirmCageyminus)){
		print("ERROR: FALLSCHIRM"+fNumber+" (monster clip y-minus) NOT FOUND!\n");
		return;
	}
	if(!doesEntityExist(eFallschirmCageyplus)){
		print("ERROR: FALLSCHIRM"+fNumber+" (monster clip y-plus) NOT FOUND!\n");
		return;
	}
//BIND NOW THE CAGE AND THE SCHIRM
	eFallschirmCageBottom.bind(eFallschirm);
	eFallschirmSchirm.bind(eFallschirm);
	eFallschirmCagexminus.bind(eFallschirm);
	eFallschirmCagexplus.bind(eFallschirm);
	eFallschirmCageyminus.bind(eFallschirm);
	eFallschirmCageyplus.bind(eFallschirm);
//CREATE VARS
	vector vOrigin,vMaxs,vMins;
//IF START VECTOR GIVEN; TAKE THE FALLSCHIRMSPRINGER THERE
	if(vStart != '0 0 0'){
		eFallschirm.moveToPos(vStart);
		eFallschirm.time(.05);
		waitFor(eFallschirm);
	}
	vOrigin = eFallschirm.getOrigin();
//spawn FALLSCHIRMSPRINGER
	entity eActor;
	eActor = spawn("actor","model",sModel,"targetname","fallschirmspringer"+fNumber,"origin",vectorToString(vOrigin),"ai_off","1");
//WAIT FOR SPAWNING
	wait(.01);
	if(!doesEntityExist(eActor)){
		print("ERROR: COULD NOT SPAWN ACTOR "+sModel+" ! (this is strange, very strange!!!)\n");
		return;
	}
//GET ACTOR BBOX!
	vMins=eActor.getMins();
	vMaxs=eActor.getMaxs();
	vStart=vMins;
	vStart_z=0;
	eFallschirm.setSize(vStart,vMaxs);
//MOVE THE WALLS TOWARDS THE MIDDLE(north,east,west,south), (they are suppose to keep the ai inside the Fallschirm)
	cageInFallschirmspringer(eFallschirmCagexminus,'30 0 0');
	cageInFallschirmspringer(eFallschirmCagexplus,'-30 0 0');
	cageInFallschirmspringer(eFallschirmCageyminus,'0 30 0');
	cageInFallschirmspringer(eFallschirmCageyplus,'0 -30 0');
	eFallschirmCagexminus.setVelocity('-1 0 0');
	eFallschirmCagexplus.setVelocity('1 0 0');
	eFallschirmCageyminus.setVelocity('0 -1 0');
	eFallschirmCageyplus.setVelocity('0 1 0');
	wait(0.1);
	eFallschirmCagexminus.setVelocity('0 0 0');
	eFallschirmCagexplus.setVelocity('0 0 0');
	eFallschirmCageyminus.setVelocity('0 0 0');
	eFallschirmCageyplus.setVelocity('0 0 0');
//DROOP RADAR... (CHECK WHERE THE GROUND IS)
	if(vLand != '0 0 0'){
		vStart=vLand;
		vStart_z += 1;
		eFallschirm.origin(vStart);
		wait(.001);
	}
	eFallschirm.dropToFloor();
//WAIT FOR DROOPING...
	wait(.01);
//IF WE HAVE NO SPECIFIC LANDING COORDS, WELL; THEN JUST LAND STRAIGHT DOWN THERE...
	if(vLand == '0 0 0'){
		vLand = eFallschirm.getOrigin();
	}
//RETURN "DROOP RADAR" TO ORIGIN
	eFallschirm.origin(vOrigin);
	wait(.001);
//SETUP ACTOR
	eActor.gravity(1);
	eActor.mass(9999);
	eActor.ai_on();
	eActor.fov(360);
	eActor.aggressive(1);
	thread setOnBlockThread(eFallschirmCagexminus,"blockedFallschirmspringer");
	thread setOnBlockThread(eFallschirmCagexplus,"blockedFallschirmspringer");
	thread setOnBlockThread(eFallschirmCageyminus,"blockedFallschirmspringer");
	thread setOnBlockThread(eFallschirmCageyplus,"blockedFallschirmspringer");
	thread setOnBlockThread(eFallschirmCageBottom,"blockedFallschirmspringer");
//MOVE THE FALLSCHIRMSPRINGER DOWN
	eFallschirm.time((randomint(99)/50) + (0.01 * (vectorLength(vOrigin - vLand))) );
	eFallschirm.moveToPos(vLand);	
//CHECK IS ACTOR ALIVE; HAVE WE REACHED THE GROUND
	float fExit;
	while(!fExit)
	{
		wait(.05);
//if actor death, or actor gets stopped (best case hits ground or a building)
		if(doesEntityExist(eActor)){
			if(eActor.getHealth() <= 0 || vectorLength((eActor.getOrigin()) - (eFallschirm.getOrigin())) > 40){
				fExit=1;
			}
		}
//if target destination has been reached
		if(eFallschirm.getVelocity() == '0 0 0'){
			fExit=1;
		}
	}
//DO NO LONGER SEND ON BLOCK EVENT(do not start onBlock thread!)
	eFallschirmCagexminus.noBlock();
	eFallschirmCagexplus.noBlock();
	eFallschirmCageyminus.noBlock();
	eFallschirmCageyplus.noBlock();
	eFallschirmCageBottom.noBlock();
//DROP FALLSCHIRMSPRINGER NOW
	relaseFallschirmspringer(fNumber);
}

