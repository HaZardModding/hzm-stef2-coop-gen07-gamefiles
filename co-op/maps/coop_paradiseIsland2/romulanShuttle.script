void romulanShuttle_setup(float fId)
//BIND SHUTTLE PARTS TO ORIGIN
{
	entity e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14;
	e1=getEntity("romulanAssaultOrigin"+fId);
	if(!doesEntityExist(e1)){
		print("ERROR: romulanShuttle_setup("+fId+") -> $romulanAssaultOrigin"+fId+" could not be found!\n");
	}
	e2=getEntity("romulanAssaultBody"+fId);
	e3=getEntity("romulanAssaultEngineR"+fId);
	e4=getEntity("romulanAssaultEngineL"+fId);
	e5=getEntity("romulanAssaultModel"+fId);
	e6=getEntity("romulanAssaultLeftPulseOrigin"+fId);
	e7=getEntity("romulanAssaultRightPulseOrigin"+fId);
	e8=getEntity("romulanAssaultLeftPulseTarget"+fId);
	e9=getEntity("romulanAssaultRightPulseTarget"+fId);	
	e10=getEntity("romulanAssaultPhotonOrigin"+fId);
	e11=getEntity("romulanAssaultPhotonTarget"+fId);
	e12=getEntity("romulanAssaultShields"+fId);
	e13=getEntity("romulanAssaultShields"+fId);
	e14=getEntity("romulanAssaultShields"+fId);
	//e12.notsolid();
	//e12.hide();
	//e13.hide();
	//e14.hide();
	thread setOnBlockThread(e12,"romulanShuttle_blocked");
	thread setOnTouchThread(e12,"romulanShuttle_touched");
	assaultShuttleMakeDestructibleAndSetThread(e2,1,"romulanShuttleUnderAattck");
	assaultShuttleMakeDestructibleAndSetThread(e3,1,"romulanShuttleUnderAattck");
	assaultShuttleMakeDestructibleAndSetThread(e4,1,"romulanShuttleUnderAattck");
	assaultShuttleMakeDestructibleAndSetThread(e5,1,"romulanShuttleUnderAattck");
	assaultShuttleMakeDestructibleAndSetThread(e6,1,"romulanShuttleUnderAattck");
	assaultShuttleMakeDestructibleAndSetThread(e7,1,"romulanShuttleUnderAattck");
	assaultShuttleMakeDestructibleAndSetThread(e8,1,"romulanShuttleUnderAattck");
	assaultShuttleMakeDestructibleAndSetThread(e9,1,"romulanShuttleUnderAattck");
	assaultShuttleMakeDestructibleAndSetThread(e10,1,"romulanShuttleUnderAattck");
	assaultShuttleMakeDestructibleAndSetThread(e11,1,"romulanShuttleUnderAattck");
	e2.bind(e1);
	e3.bind(e1);
	e4.bind(e1);
	e5.bind(e1);
	//e6.bind(e1);
	//e7.bind(e1);
	//e8.bind(e1);
	//e9.bind(e1);
	//e10.bind(e1);
	//e11.bind(e1);
	//e12.bind(e1);
	e5.notsolid();
}

void romulanShuttle_endAttack()
{
	killthread("bridge1_playerOnBridge");
	if(!fRomShuttleDestroyed){
		$romulanAssaultOrigin0.moveup(2000);
	}else{
		$romulanAssaultOrigin0.moveDown(2000);
	}
	$romulanAssaultOrigin0.time(10);
	waitFor($romulanAssaultOrigin0);
	$romulanAssaultOrigin0.moveToPos('-29933 26611 200');
	$romulanAssaultOrigin0.time(10);
	waitFor($romulanAssaultOrigin0);
	$romulanAssaultOrigin0.moveToPos('-29050 28988 -360');
	$romulanAssaultOrigin0.time(3);
	waitFor($romulanAssaultOrigin0);
}

void romulanShuttle_shieldsDown(float fId)
{
	entity e;
	e=getEntity("romulanAssaultShields"+fId);
	if(doesEntityExist(e)){
	//Hide Shields
		$romulanAssaultShields0.hide();
		$romulanAssaultShields0.notsolid();
	//make shuttle Damageable
		entity e2,e3,e4;
		e2=getEntity("romulanAssaultBody"+fId);
		e3=getEntity("romulanAssaultEngineR"+fId);
		e4=getEntity("romulanAssaultEngineL"+fId);
		$romulanAssaultBody0.triggerable();
		$romulanAssaultEngineR0.triggerable();
		$romulanAssaultEngineL0.triggerable();
	}else{
		print("Error ENTITY Not Found: $romulanAssaultShields"+fId+"\n");
	}
}

void romulanShuttle_shieldsUp(float fId)
{
	entity e;
	e=getEntity("romulanAssaultShields"+fId);
	if(doesEntityExist(e)){
	//Hide Shields
		$romulanAssaultShields0.show();
		$romulanAssaultShields0.solid();
	//make shuttle Damageable
		entity e2,e3,e4;
		e2=getEntity("romulanAssaultBody"+fId);
		e3=getEntity("romulanAssaultEngineR"+fId);
		e4=getEntity("romulanAssaultEngineL"+fId);
		if($romulanAssaultBody0.getHealth() > 0){$romulanAssaultBody0.nottriggerable();}
		if($romulanAssaultEngineR0.getHealth() > 0){$romulanAssaultEngineR0.nottriggerable();}
		if($romulanAssaultEngineL0.getHealth() > 0){$romulanAssaultEngineL0.nottriggerable();}
	}else{
		print("Error ENTITY Not Found: $romulanAssaultShields"+fId+"\n");
	}
}

void romulanShuttle_fire(float fId,float fTime)
//ROM SHUTTEL FIRE WEAPONS
{
//weapons/projectile_grenade.tik
	float fDir;
	string sTarget1,sTarget2;
	sTarget1="romulanAssaultRightPulseTarget";
	sTarget2="romulanAssaultLeftPulseTarget";
	entity e1,e2,e3,e4,e5;
	e1=getEntity("romulanAssaultLeftPulseOrigin"+fId);
	e2=getEntity("romulanAssaultRightPulseOrigin"+fId);
	e3=getEntity("romulanAssaultPhotonOrigin"+fId);
	e4=getEntity("romulanAssaultLeftPulseTarget"+fId);
	e5=getEntity("romulanAssaultRightPulseTarget"+fId);
	while(fTime > 0){//if(isPowerOfGiven(fTime,2))//e3.projectileattackentity("weapons/projectile_secondary_romradgun.tik","$romulanAssaultPhotonTarget"+fId);
		fDir++;
		fTime=(fTime - .1);
		wait(.1);
		if(isPowerOfGiven(fDir,2)){
			sTarget1="romulanAssaultPhotonTarget";
			sTarget2="romulanAssaultPhotonTarget";
			//e3.projectileattackentity("weapons/projectile_secondary_romradgun.tik","$romulanAssaultPhotonTarget"+fId);
		}
		else{
			sTarget1="romulanAssaultRightPulseTarget";
			sTarget2="romulanAssaultLeftPulseTarget";
		}
		e3.projectileattackentity("weapons/projectile_sniperbeam.tik","$"+sTarget2+""+fId);
		e2.projectileattackentity("weapons/projectile_sniperbeam.tik","$"+sTarget1+""+fId);
		e1.projectileattackentity("weapons/projectile_sniperbeam.tik","$"+sTarget2+""+fId);
	}
}


void romulanShuttle_blocked()
{
	entity e,ePlayer;
	e=getCurrentEntity();
	if(doesEntityExist(e)){
		e.noblock();
		ePlayer=e.getLastActivatingEntity();
		if(doesEntityExist(ePlayer)){
			ePlayer.kill();
		}
		wait(.1);
		thread setOnBlockThread(e,"romulanShuttle_blocked");
	}
}

void romulanShuttle_touched()
{
	entity e,ePlayer;
	e=getCurrentEntity();
	if(doesEntityExist(e)){
		e.noTouch();
		ePlayer=e.getLastActivatingEntity();
		if(doesEntityExist(ePlayer)){
			ePlayer.kill();
		}
		wait(.1);
		thread setOnBlockThread(e,"romulanShuttle_touched");
	}
}

