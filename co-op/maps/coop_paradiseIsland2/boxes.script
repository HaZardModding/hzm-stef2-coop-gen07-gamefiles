//BOXES/////////////////////////////////////////////////////////////////////////
//BOXES/////////////////////////////////////////////////////////////////////////
//BOXES/////////////////////////////////////////////////////////////////////////
void boxes_caps_setup()
//setup destructible boxcaps
{
	float fNum;
	entity e;
	e=getEntity("boxCap"+fNum);
	while(doesEntityExist(e)){
		thread setOnDamageThread(e,"boxes_caps_destroyed");
		fNum++;
		e=getEntity("boxCap"+fNum);
		wait(.001);
	}
	float_boxes=fNum;
}

void boxes_caps_destroyed()
{
	float fRounds;
	entity e1,e2;
	string sTargetname;
	e1=getCurrentEntity();
	if(doesEntityExist(e1)){
		e1.nodamage();
		sTargetname=e1.getRawTargetName();
		while(sTargetname != "boxCap"+fRounds && fRounds < 15){
			globalCoop_main_waitAFrame();
			fRounds++;
		}
		e2=getEntity("boxCapOrigin"+fRounds);
		if(doesEntityExist(e2)){
			e1.remove();
			spawn("sfx","model","fx/fx-explosion-metaldebris-directional.tik","origin",""+e2.getOrigin(),"scale",".4");
			thread boxes_spawn(fRounds);
		}
	}
}

void boxes_spawn(float fNum)
{
//Rune
//Powerup
//HoldableItem
//Health
//AmmoEntity
//BasicArmor
//SecretItem
//script_model
	//cprint("damaged");
	entity eOrigin,e,e3;
	eOrigin=getEntity("boxCapOrigin"+fNum);
	if(doesEntityExist(eOrigin)){
		vector vOrigin;
		vOrigin=eOrigin.getOrigin();
		vOrigin_z+= -30;
		float fBoxSelected,fBoxMax=4;
		string sClass,sModel;
		
		sClass="AmmoEntity";
		sModel="item/ammo_fed_large.tik";
		
		float_boxes--;
		fBoxSelected = randomInt(fBoxMax);
		while(fBoxSelected == float_boxesLast){
			fBoxSelected = randomInt(fBoxMax);
			wait(0.003);
		}
		float_boxesLast=fBoxSelected;
//Select what to span
		if(fBoxSelected == 1){
			sClass="HoldableItem";
			sModel="item/holdable_medkit.tik";
		}
		else if(fBoxSelected == 0){
			sClass="Powerup";
			sModel="item/powerup_protection.tik";
		}
		else if(fBoxSelected == 2){
			sClass="Rune";
			sModel="item/rune_ammoregen.tik";				
		}
		else if(fBoxSelected == 3){
			sClass="Powerup";
			sModel="item/powerup_regen.tik";				
		}
		else if(fBoxSelected == 4){
			sClass="BasicArmor";
			sModel="item/armor_large_shield.tik";				
		}
//SPAWN SOMETHING
		e =spawn(sClass,"model",sModel,"origin",""+vOrigin);
		wait(.1);
		if(doesEntityExist(e)){
			e.setSize('-10 -10 -10','10 10 80');
		}
		if(doesEntityExist(e3)){
			e3.setSize('-10 -10 -10','10 10 80');
		}
		//cprint("spawn: class"+sClass+"model"+sModel+"\n");
		eOrigin.remove();
	}
}


//container1Cab
void containerDestroy()
{
	entity e,e2;
	e=getCurrentEntity();
	if(doesEntityExist(e)){
		vector vOrigin;
		vOrigin = e.getOrigin();
		e2=e.getTargetEntity();
		e.remove();
		spawn("sfx","model","fx/fx-explosion-debris-metal-forever.tik","origin",""+vOrigin);
		if(doesEntityExist(e2))
		{
			triggerEntity(e2);
		}
	}
}