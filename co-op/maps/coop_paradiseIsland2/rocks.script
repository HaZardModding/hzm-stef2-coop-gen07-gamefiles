void rocks_damaged()
//aw, that player knows the trick how to disable the rocks
{
//NO MORE TRIGGER
	entity eTrigger;
	eTrigger = getCurrentEntity();
	if(doesEntityExist(eTrigger)){
		$rocks_fall.noDamage();
	}
	thread rocks_fall();
}

void rocks_fall()
{
//make em fall only once
	if(fRocksTriggered!=0){
		return;
	}
	fRocksTriggered++;
//TRIGGRED BY ROCK DAMAGE
	entity eTrigger;
	eTrigger = getCurrentEntity();
	if(!doesEntityExist(eTrigger)){
		if(doesEntityExist($rocks_fall)){
			$rocks_fall.remove();
		}
	}
	float fRock;
	entity eRock;
	for(fRock=1;fRock<8;fRock++){
		eRock = getEntity("rock" + fRock);
		if(doesEntityExist(eRock)){
			eRock.noDamage();
		}
	}

//TRIGGRED BY TRAP TRIGGER
	$rocksViewmode.remove();
	$rocks_bomb.remove();
	$rock2.selfdetonate();
	$rock1.playsound("sound/impact/explosion/big2a.wav",0,1,256);
	wait(.03);
	$rock4.selfdetonate();
	wait(.03);
	$rock5.selfdetonate();
	wait(.1);
//?:400 Z:800/740/670
	thread rocks_moveRock2();
	thread rocks_moveRock4();
	thread rocks_moveRock5();
	wait(.3);
	$rockBush.remove();//scale and rotate maybe, like it got rolled over ???
	thread rocks_moveRock1();
	thread rocks_moveRock3();
	thread rocks_moveRock6();
	thread rocks_moveRock7();
//fallschirmspringers
	
	//update 2015.10.06 let us make this mission a bit easier, and less time consuming
	//thread startFallschirmspringer(10,'-28214 31159 2200','-28577 29390 -324',"models/char/alien-type4-predator.tik");
	//thread startFallschirmspringer(11,'-32237 23573 2200','-32227 24787 -400',"models/char/alien-type4-predator.tik");
	
	$ipd1.origin('-32189 25817 -149');
	$ipd2.origin('-32093 25777 -149');
	$ipd3.origin('-31981 25817 -149');
	$ipd4.origin('-32093 25881 -149');
	$ipd5.origin('-32189 25921 -149');
	$ipd6.origin('-31981 25921 -149');
	$ipd7.origin('-32094 25986 -149');
	$ipd8.origin('-32190 26026 -149');
	$ipd1.angle(45);
	$ipd2.angle(45);
	$ipd3.angle(45);
	$ipd4.angle(45);
	$ipd5.angle(45);
	$ipd6.angle(45);
	$ipd7.angle(45);
	$ipd8.angle(45);
}

void rocks_moveRock1()
{	
	wait(randomInt(30/100));//have a realistic delay from about 0 to .3 sec
	thread rocks_move($rock1,rRndIntMinMax(400,580),670,(randomInt(5/10) + 0.7),1,1);//move-w,move-d,t,impact,sound
}

void rocks_moveRock2()
{
	wait(randomInt(30/100));//have a realistic delay from about 0 to .3 sec
	thread rocks_move($rock2,100,100,.2,0,1);//move-w,move-d,t,impact,sound
	thread rocks_move($rock2,rRndIntMinMax(400,630),680,(randomInt(5/10) + 0.5),1,0);//move-w,move-d,t,impact,sound
}

void rocks_moveRock3()
{
	wait(randomInt(30/100));//have a realistic delay from about 0 to .3 sec
	thread rocks_move($rock3,rRndIntMinMax(400,580),670,(randomInt(5/10) + 0.7),1,0);//move-w,move-d,t,impact,sound
}

void rocks_moveRock4()
{
	wait(randomInt(30/100));//have a realistic delay from about 0 to .3 sec
	thread rocks_move($rock4,100,100,.2,0,1);//move-w,move-d,t,impact,sound
	thread rocks_move($rock4,630,680,(randomInt(5/10) + 0.6),1,0);//move-w,move-d,t,impact,sound
}

void rocks_moveRock5()
{
	wait(randomInt(30/100));//have a realistic delay from about 0 to .3 sec
	thread rocks_move($rock5,100,100,.2,0,1);//move-w,move-d,t,impact,sound
	thread rocks_move($rock5,rRndIntMinMax(430,630),670,(randomInt(5/10) + 0.5),1,0);//move-w,move-d,t,impact,sound
}

void rocks_moveRock6()
{
	wait(randomInt(30/100));//have a realistic delay from about 0 to .3 sec
	thread rocks_move($rock6,rRndIntMinMax(400,580),670,(randomInt(5/10) + 0.7),1,0);//move-w,move-d,t,impact,sound
}

void rocks_moveRock7()
{
	wait(randomInt(30/100));//have a realistic delay from about 0 to .3 sec
	thread rocks_move($rock7,rRndIntMinMax(400,580),670,(randomInt(5/10) + 0.7),1,0);//move-w,move-d,t,impact,sound
}

void rocks_move(entity eRock,float fWest,float fDown,float fTime,float fImpact,float fSound)
{
	if(doesEntityExist(eRock)){
		entity eRockOrigin;
		eRockOrigin=getEntity(eRock.getRawTargetname()+"Origin");
		thread setOnTouchThread(eRock,"killActivator");
		thread setOnBlockThread(eRock,"killActivator");
		if(fSound){
			eRockOrigin.playsound("sound/impact/explosion/big2a.wav",0,1,192);
		}
		eRock.rotateX((-200 + randomInt(100)));
		eRock.rotateY((-200 + randomInt(100)));
		eRockOrigin.moveDown(fDown);
		eRockOrigin.moveWest(fWest);
		eRockOrigin.time(fTime);
		waitFor(eRockOrigin);
		thread setOnTouchThread(eRock,"killActivator");
		thread setOnBlockThread(eRock,"killActivator");
		if(fImpact){
			vector vOrigin;
			vOrigin=eRockOrigin.getOrigin();
			vOrigin_z+=30;
			spawn("sfx","model","fx/fx-explosion-debris-rocks-dust-training3.tik","origin",vectorToString(vOrigin),"scale","1");
		}
		wait(.05);
		eRock.rotateX(0);
		eRock.rotateY(0);
		eRock.noBlock();
		eRock.noTouch();
		wait(2);
		eRockOrigin.moveDown(300);
		eRockOrigin.time(20);
		waitFor(eRockOrigin);
		eRockOrigin.remove();
		eRock.remove();
	}else{
		print("ROCK DOES NOT EXIST: (w="+fWest+",d="+fDown+",t="+fTime+",impact="+fImpact+")\n");
	}
}

