init
{
	server
	{
		//-------------------------------------------------------------
		// Setup Actor
		//-------------------------------------------------------------
		classname Actor
		archetype Commander
		actortype "enemy"
		name "Commander"
		setsize "-32 -32 0" "32 32 80"
		multiplayer setsize "-32 -32 0" "32 32 280"
		watchoffset "0 0 200"
		pushable
		deathfade
		mass 700
		notifyothersatdeath
		turnspeed 360
		setdamagethreshold 20 5
		settargetposition "Bip01 Spine"
		setactorflag "meleeallowed" 0
		SetCheckConeOfFireDistance 1024
		bloodmodel fx/fx-bloodspurt-rust.tik
		cache models/fx/fx-bloodspurt-rust.tik
		setminpaintime 3

		//-------------------------------------------------------------
		// Setup Damage Modifiers
		//------------------------------------------------------------
		damagemodifier actortype enemy 0
		damagemodifier actortype teammate 0.15 1.0

		//-------------------------------------------------------------
		// Setup Pain Modifiers
		// To setup a pain modifier, use the following syntax:
		// damagemodifier damagetype <damage type> 1 1 <damageBaseLine>
		// The damagebaseline works like this:
		//  1:  If the actor takes damage >= the damageBaseLine, chance to show pain is 100%
		//  2:  The percentage chance to show pain scales based on the amount of damage versus
		//		 the damage base line... Now, I know this sounds like some strange mugumbo, so
		//		 think of like this...
		//			If our damageBaseLine = 100 and we take 50 damage, our chance to take pain
		//			will be .5 because 50/100 = .5 .  Simaliarly, if we take 25 damage, then our
		// 			chance to show pain will be .25 because 25/100 = .25
		//------------------------------------------------------------
		damagemodifier damagetype assault_rifle 1 1 50
		damagemodifier damagetype comp_rifle 1 1 50
		damagemodifier damagetype imod 1 1 50
		damagemodifier damagetype phaser 1 1 50
		damagemodifier damagetype vaporize 1 1 50
		damagemodifier damagetype stasis 1 1 50
		damagemodifier damagetype explosion 1 1 50

		//-------------------------------------------------------------
		// Setup AI
		//-------------------------------------------------------------
		masterstatemap ai/Cmdr/MS_Aln_Cmdr.st

        // Behavior Package Registration
		registerpackage "general_ai_off"
		registerpackage "commander_combat"
		registerpackage "commander_idle"


		//--------------------------------------------------------------
		// GPD
		//--------------------------------------------------------------
		// Grab data from the GPD
		processgameplaydata
	}
}

